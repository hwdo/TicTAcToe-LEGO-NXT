
//GLOBAL
//float xyposition[2] = {nMotorEncoder[motorB],nMotorEncoder[motorA]};
//MOTOR B -- WIDTH
//MOTOR A -- HEIGHT

int xyvalues[3][3] =  {0,0,0;
					   0,0,0;
					   0,0,0};

const int HEIGHT = _____________;
const int WIDTH = ______________;
int convHeight = 360 * (HEIGHT / (2 * PI * 1.5));
int convWidth = 360 * (WIDTH / (2 * PI * 1.5));

task main() {

	SensorType[S1] = sensorTouch;
	SensorType[S3] = sensorColorNxtFULL;
	//SensorType[S1] = sensorSONAR;
	const int THRESHOLD = 20;
	bool verdict = false;
	


	nMotorEncoder[motorA] = 0;
	nMotorEncoder[motorB] = 0;  

	

							// while (SensorValue[S1] >= THRESHOLD)
							// {
							// }
	while (!verdict)
	{
		while (SensorValue[S1] == 0)
		{
		}
		scanboard();

		// algorithm

		
	}



	//loop through all boxes


	//DETECT X's AND O's


	// GAME ALGORITHM
}

void scanboard()
{
	/*
		MoveRobotYUP(2);
		MoveRobotXLEFT(1);
		MoveRobotYDOWN()
	*/
	//scan first row
	//move motor left
	//scan middle row
	//move motor left
	//scan final row

	//SCANBOARD COMPLETE 
}
/*
void MoveRobotXLEFT(int x)
{
	int width = 0;
	if (x == 1)
		width = convWidth/2;
	else if (x == 2)
		width = convWidth * 3/4;
	else if (x == 0)
		width = convWidth * 1/4;
	MotorEncoder[motorB] = 0;
	nMotorEncoder[motorA] = 0;  
	motor[motorB] = 50;
	while (nMotorEncoder[motorB] < width)
	{
		if (SensorValue(S3) == BLACKCOLOR)
		{
			if (locHeight(nMotorEncoder[motorA]) == 0)
				{
					if (xyvalues[0][0] == 0)
						xyvalues[0][0] = 1;
				}
			else if (locHeight(nMotorEncoder[motorA]) == 1)
				{
					if (xyvalues[1][0] == 0)
						xyvalues[1][0] = 1;
				}
			else if (locHeight(nMotorEncoder[motorA]) == 2)
				{
					if (xyvalues[2][0] == 0)
						xyvalues[2][0]] = 1;
				}
		}
	}
	motor[motorB] = 0; 
}
void MoveRobotYUP(int y)
{
	int height = 0;
	if (y == 1)
		height = convHeight/2;
	else if (y == 2)
		height = convHeight * 3/4;
	else if (y == 0)
		height = convHeight * 1/4;
	MotorEncoder[motorB] = 0;
	nMotorEncoder[motorA] = 0;  
	motor[motorA] = 50;
	while (nMotorEncoder[motorA] < height)
	{
		if (SensorValue(S3) == BLACKCOLOR)
		{
			if (locHeight(nMotorEncoder[motorA]) == 0)
				{
					if (xyvalues[0][0] == 0)
						xyvalues[0][0] = 1;
				}
			else if (locHeight(nMotorEncoder[motorA]) == 1)
				{
					if (xyvalues[0][1] == 0)
						xyvalues[0][1] = 1;
				}
			else if (locHeight(nMotorEncoder[motorA]) == 2)
				{
					if (xyvalues[0][2] == 0)
						xyvalues[0][2] = 1;
				}
		}
	}
	motor[motorA] = 0; 
}
*/
float countsToCartesian(float x, float y)
{
	//CALC

	return x, y;
}
int locHeight(int y)
{
	if (y < convHeight/3)
	{
		return 0;
	}
	else if (y < 2 * convHeight / 3 && y > convHeight/3)
	{
		return 1;
	}
	else 
	{
		return 2;
	}
}
int locWidth(int x)
{
	if (y < convWidth/3)
	{
		return 0;
	}
	else if (y < 2 * convWidth / 3 && y > convWidth/3)
	{
		return 1;
	}
	else 
	{
		return 2;
	}
}
// float MotorX()
// {
// }

// float MotorY()
// {
// }


// typedef int tArray[2];
// tArray xyPosition;

// void getxyPosition(tArray &xx, const int nAdjust)
// {
//   int i;
//   int j;

//   for (i = 0; i < 2; ++i)
//     {
//       xx[i][j] = nAdjust;
//     }
//   return;
// }
